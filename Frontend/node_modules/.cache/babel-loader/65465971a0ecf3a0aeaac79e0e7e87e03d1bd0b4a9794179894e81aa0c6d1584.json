{"ast":null,"code":"var _jsxFileName = \"/home/rumba/Desktop/vs/Wapipay_PTE/ratefinal/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport logo from \"./images/logo.png\";\nimport image9 from \"./images/image-9.png\";\nimport image16 from \"./images/image-16.png\";\n// Add other images here...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FigmaDesign = () => {\n  _s();\n  const [currencyData, setCurrencyData] = useState([{\n    label: \"USD-KES\",\n    icon: image9,\n    buying: \"\",\n    selling: \"\"\n  }, {\n    label: \"EUR-KES\",\n    icon: image16,\n    buying: \"\",\n    selling: \"\"\n  }, {\n    label: \"USD-UGX\",\n    icon: image4,\n    buying: \"\",\n    selling: \"\"\n  }\n  // Add other currencies here...\n  ]);\n  useEffect(() => {\n    // Check if data is in localStorage\n    const storedData = localStorage.getItem(\"currencyData\");\n    if (storedData) {\n      // If data is found in localStorage, use it\n      setCurrencyData(JSON.parse(storedData));\n    } else {\n      // If no data is in localStorage, fetch from backend\n      fetch(\"http://localhost:3001/\").then(response => response.json()).then(data => {\n        updateRates(data);\n        // Store fetched data in localStorage\n        localStorage.setItem(\"currencyData\", JSON.stringify(data));\n      }).catch(error => console.error(\"Error fetching rates:\", error));\n    }\n  }, []);\n  const updateRates = data => {\n    const headers = data[0]; // First row is headers\n    const rows = data.slice(1); // Remaining rows are data\n\n    const updatedCurrencyData = currencyData.map(currency => {\n      const row = rows.find(r => r[0] === currency.label);\n      if (row) {\n        return {\n          ...currency,\n          buying: row[1],\n          selling: row[2]\n        };\n      }\n      return currency;\n    });\n    setCurrencyData(updatedCurrencyData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"currency-list\",\n      children: currencyData.map((currency, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currency-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currency.icon,\n          alt: `${currency.label} icon`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: currency.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: currency.buying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: currency.selling\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(FigmaDesign, \"XNQkh510zC1Tl9ifS16Vsb20TcM=\");\n_c = FigmaDesign;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(FigmaDesign, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FigmaDesign\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","image9","image16","jsxDEV","_jsxDEV","FigmaDesign","_s","currencyData","setCurrencyData","label","icon","buying","selling","image4","storedData","localStorage","getItem","JSON","parse","fetch","then","response","json","data","updateRates","setItem","stringify","catch","error","console","headers","rows","slice","updatedCurrencyData","map","currency","row","find","r","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","App","_c2","$RefreshReg$"],"sources":["/home/rumba/Desktop/vs/Wapipay_PTE/ratefinal/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport logo from \"./images/logo.png\"; \nimport image9 from \"./images/image-9.png\";\nimport image16 from \"./images/image-16.png\";\n// Add other images here...\n\nconst FigmaDesign = () => {\n  const [currencyData, setCurrencyData] = useState([\n    { label: \"USD-KES\", icon: image9, buying: \"\", selling: \"\" },\n    { label: \"EUR-KES\", icon: image16, buying: \"\", selling: \"\" },\n    { label: \"USD-UGX\", icon: image4, buying: \"\", selling: \"\" },\n    // Add other currencies here...\n  ]);\n\n  useEffect(() => {\n    // Check if data is in localStorage\n    const storedData = localStorage.getItem(\"currencyData\");\n\n    if (storedData) {\n      // If data is found in localStorage, use it\n      setCurrencyData(JSON.parse(storedData));\n    } else {\n      // If no data is in localStorage, fetch from backend\n      fetch(\"http://localhost:3001/\")\n        .then((response) => response.json())\n        .then((data) => {\n          updateRates(data);\n          // Store fetched data in localStorage\n          localStorage.setItem(\"currencyData\", JSON.stringify(data));\n        })\n        .catch((error) => console.error(\"Error fetching rates:\", error));\n    }\n  }, []);\n\n  const updateRates = (data) => {\n    const headers = data[0]; // First row is headers\n    const rows = data.slice(1); // Remaining rows are data\n\n    const updatedCurrencyData = currencyData.map(currency => {\n      const row = rows.find(r => r[0] === currency.label);\n      if (row) {\n        return {\n          ...currency,\n          buying: row[1],\n          selling: row[2],\n        };\n      }\n      return currency;\n    });\n\n    setCurrencyData(updatedCurrencyData);\n  };\n\n  return (\n    <div className=\"container\">\n      <img src={logo} alt=\"Logo\" className=\"logo\" />\n      <div className=\"currency-list\">\n        {currencyData.map((currency, index) => (\n          <div key={index} className=\"currency-row\">\n            <img src={currency.icon} alt={`${currency.label} icon`} />\n            <span>{currency.label}</span>\n            <span>{currency.buying}</span>\n            <span>{currency.selling}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return <FigmaDesign />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}